- hosts: localhost
  name: Setting up config files
  connection: local
  vars:
    # being absolutely explicit about what config to install
    configs:
      - zshrc
      - p10k.zsh
      - wezterm.lua
      - vscode-server
    paths:
        - .profile
        - .zprofile
    current_config: "{{ lookup('env', 'HOME') }}/.{{ item }}"
    source_config: "{{ playbook_dir | dirname }}/link_src/{{ item.item }}"
  tasks:
    - name: Adding artillery path (root of this repo) variable to bash env
      blockinfile:
        path: "{{ lookup('env', 'HOME') }}/{{ item  }}"
        create: true
        mode: 0644
        block: |
          NONROOT_HOME={{ playbook_dir | dirname }};export NONROOT_HOME
          PATH=$NONROOT_HOME/env/bin; export PATH
          if lsb_release -i | grep 'RedHat'
          then
            STATIC_DIR=/nobackup/yishe2;export STATIC_DIR
          else
            STATIC_DIR=$NONROOT_HOME;export STATIC_DIR
          fi
      loop: "{{ vars['paths'] }}"

    - name: Check if configs installed already
      ansible.builtin.stat:
        path: "{{ lookup('vars', 'current_config') }}"
      loop: "{{ vars['configs'] }}"
      register: config_check
      ignore_errors: true
    - name: unlink
      ansible.builtin.command:
        unlink "{{ item.invocation.module_args.path }}"
      when: >
        (item.stat.lnk_source is defined and item.stat.lnk_source != lookup('vars', 'source_config'))
      loop: "{{ config_check['results'] }}"

    - name: Backing up current configs if not installed already
      command:
        mv -b "{{ item.invocation.module_args.path }}" "{{ item.invocation.module_args.path }}.bk"
      when: >
        (item.stat.exists and item.stat.lnk_source is not defined)
      loop: "{{ config_check['results'] }}"
    # Considering using twpayne/chezmoi to manage dot files instead
    - name: Adding preferred config
      ansible.builtin.file:
        path: "{{ item.invocation.module_args.path }}"
        src: "{{ lookup('vars', 'source_config') }}"
        state: "link"
        mode: u=rwx,g=r,o=r
      when: >
        item.stat.lnk_source is not defined
        or
        item.stat.lnk_source != lookup('vars', 'source_config')
      loop: "{{ config_check['results'] }}"
